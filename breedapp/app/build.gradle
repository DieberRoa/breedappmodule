apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.dagger.hilt.android'
apply plugin: 'jacoco'

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.pragma.democatbreed"
        minSdk 27
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            testCoverageEnabled true
        }
    }

    buildFeatures{
        dataBinding = true
        viewBinding = true
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES', 'META-INF/LICENSE', 'META-INF/LICENSE.txt', 'META-INF/license.txt', 'META-INF/NOTICE', 'META-INF/NOTICE.txt', 'META-INF/notice.txt', 'META-INF/ASL2.0', 'META-INF/*.kotlin_module', 'META-INF/gradle/incremental.annotation.processors']
        }
    }


    lint {
        abortOnError false
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
}

jacoco {
    toolVersion = "0.8.7"
    // Custom reports directory can be specfied like this:
    // reportsDir = file("$buildDir/customJacocoReportDir")
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
    // see related issue https://github.com/gradle/gradle/issues/5184#issuecomment-457865951
}


task jacocoTestReport(type: JacocoReport,
        dependsOn: ['testDebugUnitTest',
                    'createDebugCoverageReport']) {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def excludes = [
            // data binding
            'android/databinding/**/*.class',
            '**/android/databinding/*Binding.class',
            '**/android/databinding/*',
            '**/androidx/databinding/*',
            '**/BR.*',
            // android
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            // butterKnife
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            // dagger
            '**/*_MembersInjector.class',
            '**/Dagger*Component.class',
            '**/Dagger*Component$Builder.class',
            '**/*Module_*Factory.class',
            '**/di/module/*',
            '**/*_Factory*.*',
            '**/*Module*.*',
            '**/*Dagger*.*',
            '**/*Hilt*.*',
            // kotlin
            '**/*MapperImpl*.*',
            '**/*$ViewInjector*.*',
            '**/*$ViewBinder*.*',
            '**/BuildConfig.*',
            '**/*Component*.*',
            '**/*BR*.*',
            '**/Manifest*.*',
            '**/*$Lambda$*.*',
            '**/*Companion*.*',
            '**/*Module*.*',
            '**/*Dagger*.*',
            '**/*Hilt*.*',
            '**/*MembersInjector*.*',
            '**/*_MembersInjector.class',
            '**/*_Factory*.*',
            '**/*_Provide*Factory*.*',
            '**/*Extensions*.*',
            // sealed and data classes
            '**/*$Result.*',
            '**/*$Result$*.*',
            'com/pragma/demojenkinsapp/data/**.*',
            'com/pragma/demojenkinsapp/di/**.*',
            'com/pragma/demojenkinsapp/domain/**.*',
            'com/pragma/demojenkinsapp/ui/viewmodels/**.*',
            'com/pragma/demojenkinsapp/CoreApplication.*',
    ]

    def debugTree = fileTree(dir:
            "${buildDir}/intermediates/javac/debug/classes",
            excludes: excludes
    )

    def mainSrc = "/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))

    classDirectories.setFrom([debugTree])
    executionData.setFrom(fileTree(dir: "${buildDir}", includes:[
            "/jacoco/testDebugUnitTest.exec"]))
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'


    implementation "androidx.recyclerview:recyclerview:1.2.1"
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.5.0"
    implementation 'com.google.android.material:material:1.6.1'
    implementation "androidx.fragment:fragment-ktx:1.5.0"
    implementation "androidx.activity:activity-ktx:1.5.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.0"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.1.1'
    implementation 'androidx.paging:paging-common-ktx:3.1.1'
    implementation 'androidx.paging:paging-compose:1.0.0-alpha14'
    androidTestImplementation 'androidx.test:rules:1.4.1-alpha07'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'

    // HILT
    implementation "com.google.dagger:hilt-android:2.43"
    kapt "com.google.dagger:hilt-android-compiler:2.40.5"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1"

    kapt "com.android.databinding:compiler:3.1.4"
    kapt "androidx.lifecycle:lifecycle-compiler:2.5.1"
    kapt "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.4.2"
    // HILT

    kapt 'com.google.dagger:hilt-compiler:2.43'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation "org.mockito:mockito-core:3.4.6"
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0-alpha07'
}
